/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.1
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the Organisation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Organisation{}

// Organisation struct for Organisation
type Organisation struct {
	// Unique Xero identifier
	OrganisationID *string `json:"OrganisationID,omitempty"`
	// Display a unique key used for Xero-to-Xero transactions
	APIKey *string `json:"APIKey,omitempty"`
	// Display name of organisation shown in Xero
	Name *string `json:"Name,omitempty"`
	// Organisation name shown on Reports
	LegalName *string `json:"LegalName,omitempty"`
	// Boolean to describe if organisation is registered with a local tax authority i.e. true, false
	PaysTax *bool `json:"PaysTax,omitempty"`
	// See Version Types
	Version *string `json:"Version,omitempty"`
	// Organisation Type
	OrganisationType *string `json:"OrganisationType,omitempty"`
	BaseCurrency *CurrencyCode `json:"BaseCurrency,omitempty"`
	CountryCode *CountryCode `json:"CountryCode,omitempty"`
	// Boolean to describe if organisation is a demo company.
	IsDemoCompany *bool `json:"IsDemoCompany,omitempty"`
	// Will be set to ACTIVE if you can connect to organisation via the Xero API
	OrganisationStatus *string `json:"OrganisationStatus,omitempty"`
	// Shows for New Zealand, Australian and UK organisations
	RegistrationNumber *string `json:"RegistrationNumber,omitempty"`
	// Shown if set. US Only.
	EmployerIdentificationNumber *string `json:"EmployerIdentificationNumber,omitempty"`
	// Shown if set. Displays in the Xero UI as Tax File Number (AU), GST Number (NZ), VAT Number (UK) and Tax ID Number (US & Global).
	TaxNumber *string `json:"TaxNumber,omitempty"`
	// Calendar day e.g. 0-31
	FinancialYearEndDay *int32 `json:"FinancialYearEndDay,omitempty"`
	// Calendar Month e.g. 1-12
	FinancialYearEndMonth *int32 `json:"FinancialYearEndMonth,omitempty"`
	// The accounting basis used for tax returns. See Sales Tax Basis
	SalesTaxBasis *string `json:"SalesTaxBasis,omitempty"`
	// The frequency with which tax returns are processed. See Sales Tax Period
	SalesTaxPeriod *string `json:"SalesTaxPeriod,omitempty"`
	// The default for LineAmountTypes on sales transactions
	DefaultSalesTax *string `json:"DefaultSalesTax,omitempty"`
	// The default for LineAmountTypes on purchase transactions
	DefaultPurchasesTax *string `json:"DefaultPurchasesTax,omitempty"`
	// Shown if set. See lock dates
	PeriodLockDate *string `json:"PeriodLockDate,omitempty"`
	// Shown if set. See lock dates
	EndOfYearLockDate *string `json:"EndOfYearLockDate,omitempty"`
	// Timestamp when the organisation was created in Xero
	CreatedDateUTC *string `json:"CreatedDateUTC,omitempty"`
	Timezone *TimeZone `json:"Timezone,omitempty"`
	// Organisation Entity Type
	OrganisationEntityType *string `json:"OrganisationEntityType,omitempty"`
	// A unique identifier for the organisation. Potential uses.
	ShortCode *string `json:"ShortCode,omitempty"`
	// Organisation Classes describe which plan the Xero organisation is on (e.g. DEMO, TRIAL, PREMIUM)
	Class *string `json:"Class,omitempty"`
	// BUSINESS or PARTNER. Partner edition organisations are sold exclusively through accounting partners and have restricted functionality (e.g. no access to invoicing)
	Edition *string `json:"Edition,omitempty"`
	// Description of business type as defined in Organisation settings
	LineOfBusiness *string `json:"LineOfBusiness,omitempty"`
	// Address details for organisation – see Addresses
	Addresses []AddressForOrganisation `json:"Addresses,omitempty"`
	// Phones details for organisation – see Phones
	Phones []Phone `json:"Phones,omitempty"`
	// Organisation profile links for popular services such as Facebook,Twitter, GooglePlus and LinkedIn. You can also add link to your website here. Shown if Organisation settings  is updated in Xero. See ExternalLinks below
	ExternalLinks []ExternalLink `json:"ExternalLinks,omitempty"`
	PaymentTerms *PaymentTerm `json:"PaymentTerms,omitempty"`
}

// NewOrganisation instantiates a new Organisation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganisation() *Organisation {
	this := Organisation{}
	return &this
}

// NewOrganisationWithDefaults instantiates a new Organisation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganisationWithDefaults() *Organisation {
	this := Organisation{}
	return &this
}

// GetOrganisationID returns the OrganisationID field value if set, zero value otherwise.
func (o *Organisation) GetOrganisationID() string {
	if o == nil || IsNil(o.OrganisationID) {
		var ret string
		return ret
	}
	return *o.OrganisationID
}

// GetOrganisationIDOk returns a tuple with the OrganisationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetOrganisationIDOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationID) {
		return nil, false
	}
	return o.OrganisationID, true
}

// HasOrganisationIDField returns a boolean if a field has been set.
func (o *Organisation) HasOrganisationIDField() bool {
	if o != nil && !IsNil(o.OrganisationID) {
		return true
	}

	return false
}

// SetOrganisationID gets a reference to the given string and assigns it to the OrganisationID field.
func (o *Organisation) SetOrganisationID(v string) {
	o.OrganisationID = &v
}

// GetAPIKey returns the APIKey field value if set, zero value otherwise.
func (o *Organisation) GetAPIKey() string {
	if o == nil || IsNil(o.APIKey) {
		var ret string
		return ret
	}
	return *o.APIKey
}

// GetAPIKeyOk returns a tuple with the APIKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetAPIKeyOk() (*string, bool) {
	if o == nil || IsNil(o.APIKey) {
		return nil, false
	}
	return o.APIKey, true
}

// HasAPIKeyField returns a boolean if a field has been set.
func (o *Organisation) HasAPIKeyField() bool {
	if o != nil && !IsNil(o.APIKey) {
		return true
	}

	return false
}

// SetAPIKey gets a reference to the given string and assigns it to the APIKey field.
func (o *Organisation) SetAPIKey(v string) {
	o.APIKey = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Organisation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasNameField returns a boolean if a field has been set.
func (o *Organisation) HasNameField() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Organisation) SetName(v string) {
	o.Name = &v
}

// GetLegalName returns the LegalName field value if set, zero value otherwise.
func (o *Organisation) GetLegalName() string {
	if o == nil || IsNil(o.LegalName) {
		var ret string
		return ret
	}
	return *o.LegalName
}

// GetLegalNameOk returns a tuple with the LegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetLegalNameOk() (*string, bool) {
	if o == nil || IsNil(o.LegalName) {
		return nil, false
	}
	return o.LegalName, true
}

// HasLegalNameField returns a boolean if a field has been set.
func (o *Organisation) HasLegalNameField() bool {
	if o != nil && !IsNil(o.LegalName) {
		return true
	}

	return false
}

// SetLegalName gets a reference to the given string and assigns it to the LegalName field.
func (o *Organisation) SetLegalName(v string) {
	o.LegalName = &v
}

// GetPaysTax returns the PaysTax field value if set, zero value otherwise.
func (o *Organisation) GetPaysTax() bool {
	if o == nil || IsNil(o.PaysTax) {
		var ret bool
		return ret
	}
	return *o.PaysTax
}

// GetPaysTaxOk returns a tuple with the PaysTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetPaysTaxOk() (*bool, bool) {
	if o == nil || IsNil(o.PaysTax) {
		return nil, false
	}
	return o.PaysTax, true
}

// HasPaysTaxField returns a boolean if a field has been set.
func (o *Organisation) HasPaysTaxField() bool {
	if o != nil && !IsNil(o.PaysTax) {
		return true
	}

	return false
}

// SetPaysTax gets a reference to the given bool and assigns it to the PaysTax field.
func (o *Organisation) SetPaysTax(v bool) {
	o.PaysTax = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Organisation) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersionField returns a boolean if a field has been set.
func (o *Organisation) HasVersionField() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Organisation) SetVersion(v string) {
	o.Version = &v
}

// GetOrganisationType returns the OrganisationType field value if set, zero value otherwise.
func (o *Organisation) GetOrganisationType() string {
	if o == nil || IsNil(o.OrganisationType) {
		var ret string
		return ret
	}
	return *o.OrganisationType
}

// GetOrganisationTypeOk returns a tuple with the OrganisationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetOrganisationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationType) {
		return nil, false
	}
	return o.OrganisationType, true
}

// HasOrganisationTypeField returns a boolean if a field has been set.
func (o *Organisation) HasOrganisationTypeField() bool {
	if o != nil && !IsNil(o.OrganisationType) {
		return true
	}

	return false
}

// SetOrganisationType gets a reference to the given string and assigns it to the OrganisationType field.
func (o *Organisation) SetOrganisationType(v string) {
	o.OrganisationType = &v
}

// GetBaseCurrency returns the BaseCurrency field value if set, zero value otherwise.
func (o *Organisation) GetBaseCurrency() CurrencyCode {
	if o == nil || IsNil(o.BaseCurrency) {
		var ret CurrencyCode
		return ret
	}
	return *o.BaseCurrency
}

// GetBaseCurrencyOk returns a tuple with the BaseCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetBaseCurrencyOk() (*CurrencyCode, bool) {
	if o == nil || IsNil(o.BaseCurrency) {
		return nil, false
	}
	return o.BaseCurrency, true
}

// HasBaseCurrencyField returns a boolean if a field has been set.
func (o *Organisation) HasBaseCurrencyField() bool {
	if o != nil && !IsNil(o.BaseCurrency) {
		return true
	}

	return false
}

// SetBaseCurrency gets a reference to the given CurrencyCode and assigns it to the BaseCurrency field.
func (o *Organisation) SetBaseCurrency(v CurrencyCode) {
	o.BaseCurrency = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *Organisation) GetCountryCode() CountryCode {
	if o == nil || IsNil(o.CountryCode) {
		var ret CountryCode
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetCountryCodeOk() (*CountryCode, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCodeField returns a boolean if a field has been set.
func (o *Organisation) HasCountryCodeField() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given CountryCode and assigns it to the CountryCode field.
func (o *Organisation) SetCountryCode(v CountryCode) {
	o.CountryCode = &v
}

// GetIsDemoCompany returns the IsDemoCompany field value if set, zero value otherwise.
func (o *Organisation) GetIsDemoCompany() bool {
	if o == nil || IsNil(o.IsDemoCompany) {
		var ret bool
		return ret
	}
	return *o.IsDemoCompany
}

// GetIsDemoCompanyOk returns a tuple with the IsDemoCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetIsDemoCompanyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDemoCompany) {
		return nil, false
	}
	return o.IsDemoCompany, true
}

// HasIsDemoCompanyField returns a boolean if a field has been set.
func (o *Organisation) HasIsDemoCompanyField() bool {
	if o != nil && !IsNil(o.IsDemoCompany) {
		return true
	}

	return false
}

// SetIsDemoCompany gets a reference to the given bool and assigns it to the IsDemoCompany field.
func (o *Organisation) SetIsDemoCompany(v bool) {
	o.IsDemoCompany = &v
}

// GetOrganisationStatus returns the OrganisationStatus field value if set, zero value otherwise.
func (o *Organisation) GetOrganisationStatus() string {
	if o == nil || IsNil(o.OrganisationStatus) {
		var ret string
		return ret
	}
	return *o.OrganisationStatus
}

// GetOrganisationStatusOk returns a tuple with the OrganisationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetOrganisationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationStatus) {
		return nil, false
	}
	return o.OrganisationStatus, true
}

// HasOrganisationStatusField returns a boolean if a field has been set.
func (o *Organisation) HasOrganisationStatusField() bool {
	if o != nil && !IsNil(o.OrganisationStatus) {
		return true
	}

	return false
}

// SetOrganisationStatus gets a reference to the given string and assigns it to the OrganisationStatus field.
func (o *Organisation) SetOrganisationStatus(v string) {
	o.OrganisationStatus = &v
}

// GetRegistrationNumber returns the RegistrationNumber field value if set, zero value otherwise.
func (o *Organisation) GetRegistrationNumber() string {
	if o == nil || IsNil(o.RegistrationNumber) {
		var ret string
		return ret
	}
	return *o.RegistrationNumber
}

// GetRegistrationNumberOk returns a tuple with the RegistrationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetRegistrationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationNumber) {
		return nil, false
	}
	return o.RegistrationNumber, true
}

// HasRegistrationNumberField returns a boolean if a field has been set.
func (o *Organisation) HasRegistrationNumberField() bool {
	if o != nil && !IsNil(o.RegistrationNumber) {
		return true
	}

	return false
}

// SetRegistrationNumber gets a reference to the given string and assigns it to the RegistrationNumber field.
func (o *Organisation) SetRegistrationNumber(v string) {
	o.RegistrationNumber = &v
}

// GetEmployerIdentificationNumber returns the EmployerIdentificationNumber field value if set, zero value otherwise.
func (o *Organisation) GetEmployerIdentificationNumber() string {
	if o == nil || IsNil(o.EmployerIdentificationNumber) {
		var ret string
		return ret
	}
	return *o.EmployerIdentificationNumber
}

// GetEmployerIdentificationNumberOk returns a tuple with the EmployerIdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetEmployerIdentificationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EmployerIdentificationNumber) {
		return nil, false
	}
	return o.EmployerIdentificationNumber, true
}

// HasEmployerIdentificationNumberField returns a boolean if a field has been set.
func (o *Organisation) HasEmployerIdentificationNumberField() bool {
	if o != nil && !IsNil(o.EmployerIdentificationNumber) {
		return true
	}

	return false
}

// SetEmployerIdentificationNumber gets a reference to the given string and assigns it to the EmployerIdentificationNumber field.
func (o *Organisation) SetEmployerIdentificationNumber(v string) {
	o.EmployerIdentificationNumber = &v
}

// GetTaxNumber returns the TaxNumber field value if set, zero value otherwise.
func (o *Organisation) GetTaxNumber() string {
	if o == nil || IsNil(o.TaxNumber) {
		var ret string
		return ret
	}
	return *o.TaxNumber
}

// GetTaxNumberOk returns a tuple with the TaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetTaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxNumber) {
		return nil, false
	}
	return o.TaxNumber, true
}

// HasTaxNumberField returns a boolean if a field has been set.
func (o *Organisation) HasTaxNumberField() bool {
	if o != nil && !IsNil(o.TaxNumber) {
		return true
	}

	return false
}

// SetTaxNumber gets a reference to the given string and assigns it to the TaxNumber field.
func (o *Organisation) SetTaxNumber(v string) {
	o.TaxNumber = &v
}

// GetFinancialYearEndDay returns the FinancialYearEndDay field value if set, zero value otherwise.
func (o *Organisation) GetFinancialYearEndDay() int32 {
	if o == nil || IsNil(o.FinancialYearEndDay) {
		var ret int32
		return ret
	}
	return *o.FinancialYearEndDay
}

// GetFinancialYearEndDayOk returns a tuple with the FinancialYearEndDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetFinancialYearEndDayOk() (*int32, bool) {
	if o == nil || IsNil(o.FinancialYearEndDay) {
		return nil, false
	}
	return o.FinancialYearEndDay, true
}

// HasFinancialYearEndDayField returns a boolean if a field has been set.
func (o *Organisation) HasFinancialYearEndDayField() bool {
	if o != nil && !IsNil(o.FinancialYearEndDay) {
		return true
	}

	return false
}

// SetFinancialYearEndDay gets a reference to the given int32 and assigns it to the FinancialYearEndDay field.
func (o *Organisation) SetFinancialYearEndDay(v int32) {
	o.FinancialYearEndDay = &v
}

// GetFinancialYearEndMonth returns the FinancialYearEndMonth field value if set, zero value otherwise.
func (o *Organisation) GetFinancialYearEndMonth() int32 {
	if o == nil || IsNil(o.FinancialYearEndMonth) {
		var ret int32
		return ret
	}
	return *o.FinancialYearEndMonth
}

// GetFinancialYearEndMonthOk returns a tuple with the FinancialYearEndMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetFinancialYearEndMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.FinancialYearEndMonth) {
		return nil, false
	}
	return o.FinancialYearEndMonth, true
}

// HasFinancialYearEndMonthField returns a boolean if a field has been set.
func (o *Organisation) HasFinancialYearEndMonthField() bool {
	if o != nil && !IsNil(o.FinancialYearEndMonth) {
		return true
	}

	return false
}

// SetFinancialYearEndMonth gets a reference to the given int32 and assigns it to the FinancialYearEndMonth field.
func (o *Organisation) SetFinancialYearEndMonth(v int32) {
	o.FinancialYearEndMonth = &v
}

// GetSalesTaxBasis returns the SalesTaxBasis field value if set, zero value otherwise.
func (o *Organisation) GetSalesTaxBasis() string {
	if o == nil || IsNil(o.SalesTaxBasis) {
		var ret string
		return ret
	}
	return *o.SalesTaxBasis
}

// GetSalesTaxBasisOk returns a tuple with the SalesTaxBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetSalesTaxBasisOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxBasis) {
		return nil, false
	}
	return o.SalesTaxBasis, true
}

// HasSalesTaxBasisField returns a boolean if a field has been set.
func (o *Organisation) HasSalesTaxBasisField() bool {
	if o != nil && !IsNil(o.SalesTaxBasis) {
		return true
	}

	return false
}

// SetSalesTaxBasis gets a reference to the given string and assigns it to the SalesTaxBasis field.
func (o *Organisation) SetSalesTaxBasis(v string) {
	o.SalesTaxBasis = &v
}

// GetSalesTaxPeriod returns the SalesTaxPeriod field value if set, zero value otherwise.
func (o *Organisation) GetSalesTaxPeriod() string {
	if o == nil || IsNil(o.SalesTaxPeriod) {
		var ret string
		return ret
	}
	return *o.SalesTaxPeriod
}

// GetSalesTaxPeriodOk returns a tuple with the SalesTaxPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetSalesTaxPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxPeriod) {
		return nil, false
	}
	return o.SalesTaxPeriod, true
}

// HasSalesTaxPeriodField returns a boolean if a field has been set.
func (o *Organisation) HasSalesTaxPeriodField() bool {
	if o != nil && !IsNil(o.SalesTaxPeriod) {
		return true
	}

	return false
}

// SetSalesTaxPeriod gets a reference to the given string and assigns it to the SalesTaxPeriod field.
func (o *Organisation) SetSalesTaxPeriod(v string) {
	o.SalesTaxPeriod = &v
}

// GetDefaultSalesTax returns the DefaultSalesTax field value if set, zero value otherwise.
func (o *Organisation) GetDefaultSalesTax() string {
	if o == nil || IsNil(o.DefaultSalesTax) {
		var ret string
		return ret
	}
	return *o.DefaultSalesTax
}

// GetDefaultSalesTaxOk returns a tuple with the DefaultSalesTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetDefaultSalesTaxOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultSalesTax) {
		return nil, false
	}
	return o.DefaultSalesTax, true
}

// HasDefaultSalesTaxField returns a boolean if a field has been set.
func (o *Organisation) HasDefaultSalesTaxField() bool {
	if o != nil && !IsNil(o.DefaultSalesTax) {
		return true
	}

	return false
}

// SetDefaultSalesTax gets a reference to the given string and assigns it to the DefaultSalesTax field.
func (o *Organisation) SetDefaultSalesTax(v string) {
	o.DefaultSalesTax = &v
}

// GetDefaultPurchasesTax returns the DefaultPurchasesTax field value if set, zero value otherwise.
func (o *Organisation) GetDefaultPurchasesTax() string {
	if o == nil || IsNil(o.DefaultPurchasesTax) {
		var ret string
		return ret
	}
	return *o.DefaultPurchasesTax
}

// GetDefaultPurchasesTaxOk returns a tuple with the DefaultPurchasesTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetDefaultPurchasesTaxOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPurchasesTax) {
		return nil, false
	}
	return o.DefaultPurchasesTax, true
}

// HasDefaultPurchasesTaxField returns a boolean if a field has been set.
func (o *Organisation) HasDefaultPurchasesTaxField() bool {
	if o != nil && !IsNil(o.DefaultPurchasesTax) {
		return true
	}

	return false
}

// SetDefaultPurchasesTax gets a reference to the given string and assigns it to the DefaultPurchasesTax field.
func (o *Organisation) SetDefaultPurchasesTax(v string) {
	o.DefaultPurchasesTax = &v
}

// GetPeriodLockDate returns the PeriodLockDate field value if set, zero value otherwise.
func (o *Organisation) GetPeriodLockDate() string {
	if o == nil || IsNil(o.PeriodLockDate) {
		var ret string
		return ret
	}
	return *o.PeriodLockDate
}

// GetPeriodLockDateOk returns a tuple with the PeriodLockDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetPeriodLockDateOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodLockDate) {
		return nil, false
	}
	return o.PeriodLockDate, true
}

// HasPeriodLockDateField returns a boolean if a field has been set.
func (o *Organisation) HasPeriodLockDateField() bool {
	if o != nil && !IsNil(o.PeriodLockDate) {
		return true
	}

	return false
}

// SetPeriodLockDate gets a reference to the given string and assigns it to the PeriodLockDate field.
func (o *Organisation) SetPeriodLockDate(v string) {
	o.PeriodLockDate = &v
}

// GetEndOfYearLockDate returns the EndOfYearLockDate field value if set, zero value otherwise.
func (o *Organisation) GetEndOfYearLockDate() string {
	if o == nil || IsNil(o.EndOfYearLockDate) {
		var ret string
		return ret
	}
	return *o.EndOfYearLockDate
}

// GetEndOfYearLockDateOk returns a tuple with the EndOfYearLockDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetEndOfYearLockDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndOfYearLockDate) {
		return nil, false
	}
	return o.EndOfYearLockDate, true
}

// HasEndOfYearLockDateField returns a boolean if a field has been set.
func (o *Organisation) HasEndOfYearLockDateField() bool {
	if o != nil && !IsNil(o.EndOfYearLockDate) {
		return true
	}

	return false
}

// SetEndOfYearLockDate gets a reference to the given string and assigns it to the EndOfYearLockDate field.
func (o *Organisation) SetEndOfYearLockDate(v string) {
	o.EndOfYearLockDate = &v
}

// GetCreatedDateUTC returns the CreatedDateUTC field value if set, zero value otherwise.
func (o *Organisation) GetCreatedDateUTC() string {
	if o == nil || IsNil(o.CreatedDateUTC) {
		var ret string
		return ret
	}
	return *o.CreatedDateUTC
}

// GetCreatedDateUTCOk returns a tuple with the CreatedDateUTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetCreatedDateUTCOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDateUTC) {
		return nil, false
	}
	return o.CreatedDateUTC, true
}

// HasCreatedDateUTCField returns a boolean if a field has been set.
func (o *Organisation) HasCreatedDateUTCField() bool {
	if o != nil && !IsNil(o.CreatedDateUTC) {
		return true
	}

	return false
}

// SetCreatedDateUTC gets a reference to the given string and assigns it to the CreatedDateUTC field.
func (o *Organisation) SetCreatedDateUTC(v string) {
	o.CreatedDateUTC = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *Organisation) GetTimezone() TimeZone {
	if o == nil || IsNil(o.Timezone) {
		var ret TimeZone
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetTimezoneOk() (*TimeZone, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezoneField returns a boolean if a field has been set.
func (o *Organisation) HasTimezoneField() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given TimeZone and assigns it to the Timezone field.
func (o *Organisation) SetTimezone(v TimeZone) {
	o.Timezone = &v
}

// GetOrganisationEntityType returns the OrganisationEntityType field value if set, zero value otherwise.
func (o *Organisation) GetOrganisationEntityType() string {
	if o == nil || IsNil(o.OrganisationEntityType) {
		var ret string
		return ret
	}
	return *o.OrganisationEntityType
}

// GetOrganisationEntityTypeOk returns a tuple with the OrganisationEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetOrganisationEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationEntityType) {
		return nil, false
	}
	return o.OrganisationEntityType, true
}

// HasOrganisationEntityTypeField returns a boolean if a field has been set.
func (o *Organisation) HasOrganisationEntityTypeField() bool {
	if o != nil && !IsNil(o.OrganisationEntityType) {
		return true
	}

	return false
}

// SetOrganisationEntityType gets a reference to the given string and assigns it to the OrganisationEntityType field.
func (o *Organisation) SetOrganisationEntityType(v string) {
	o.OrganisationEntityType = &v
}

// GetShortCode returns the ShortCode field value if set, zero value otherwise.
func (o *Organisation) GetShortCode() string {
	if o == nil || IsNil(o.ShortCode) {
		var ret string
		return ret
	}
	return *o.ShortCode
}

// GetShortCodeOk returns a tuple with the ShortCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetShortCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ShortCode) {
		return nil, false
	}
	return o.ShortCode, true
}

// HasShortCodeField returns a boolean if a field has been set.
func (o *Organisation) HasShortCodeField() bool {
	if o != nil && !IsNil(o.ShortCode) {
		return true
	}

	return false
}

// SetShortCode gets a reference to the given string and assigns it to the ShortCode field.
func (o *Organisation) SetShortCode(v string) {
	o.ShortCode = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *Organisation) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClassField returns a boolean if a field has been set.
func (o *Organisation) HasClassField() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *Organisation) SetClass(v string) {
	o.Class = &v
}

// GetEdition returns the Edition field value if set, zero value otherwise.
func (o *Organisation) GetEdition() string {
	if o == nil || IsNil(o.Edition) {
		var ret string
		return ret
	}
	return *o.Edition
}

// GetEditionOk returns a tuple with the Edition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetEditionOk() (*string, bool) {
	if o == nil || IsNil(o.Edition) {
		return nil, false
	}
	return o.Edition, true
}

// HasEditionField returns a boolean if a field has been set.
func (o *Organisation) HasEditionField() bool {
	if o != nil && !IsNil(o.Edition) {
		return true
	}

	return false
}

// SetEdition gets a reference to the given string and assigns it to the Edition field.
func (o *Organisation) SetEdition(v string) {
	o.Edition = &v
}

// GetLineOfBusiness returns the LineOfBusiness field value if set, zero value otherwise.
func (o *Organisation) GetLineOfBusiness() string {
	if o == nil || IsNil(o.LineOfBusiness) {
		var ret string
		return ret
	}
	return *o.LineOfBusiness
}

// GetLineOfBusinessOk returns a tuple with the LineOfBusiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetLineOfBusinessOk() (*string, bool) {
	if o == nil || IsNil(o.LineOfBusiness) {
		return nil, false
	}
	return o.LineOfBusiness, true
}

// HasLineOfBusinessField returns a boolean if a field has been set.
func (o *Organisation) HasLineOfBusinessField() bool {
	if o != nil && !IsNil(o.LineOfBusiness) {
		return true
	}

	return false
}

// SetLineOfBusiness gets a reference to the given string and assigns it to the LineOfBusiness field.
func (o *Organisation) SetLineOfBusiness(v string) {
	o.LineOfBusiness = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *Organisation) GetAddresses() []AddressForOrganisation {
	if o == nil || IsNil(o.Addresses) {
		var ret []AddressForOrganisation
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetAddressesOk() ([]AddressForOrganisation, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddressesField returns a boolean if a field has been set.
func (o *Organisation) HasAddressesField() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []AddressForOrganisation and assigns it to the Addresses field.
func (o *Organisation) SetAddresses(v []AddressForOrganisation) {
	o.Addresses = v
}

// GetPhones returns the Phones field value if set, zero value otherwise.
func (o *Organisation) GetPhones() []Phone {
	if o == nil || IsNil(o.Phones) {
		var ret []Phone
		return ret
	}
	return o.Phones
}

// GetPhonesOk returns a tuple with the Phones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetPhonesOk() ([]Phone, bool) {
	if o == nil || IsNil(o.Phones) {
		return nil, false
	}
	return o.Phones, true
}

// HasPhonesField returns a boolean if a field has been set.
func (o *Organisation) HasPhonesField() bool {
	if o != nil && !IsNil(o.Phones) {
		return true
	}

	return false
}

// SetPhones gets a reference to the given []Phone and assigns it to the Phones field.
func (o *Organisation) SetPhones(v []Phone) {
	o.Phones = v
}

// GetExternalLinks returns the ExternalLinks field value if set, zero value otherwise.
func (o *Organisation) GetExternalLinks() []ExternalLink {
	if o == nil || IsNil(o.ExternalLinks) {
		var ret []ExternalLink
		return ret
	}
	return o.ExternalLinks
}

// GetExternalLinksOk returns a tuple with the ExternalLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetExternalLinksOk() ([]ExternalLink, bool) {
	if o == nil || IsNil(o.ExternalLinks) {
		return nil, false
	}
	return o.ExternalLinks, true
}

// HasExternalLinksField returns a boolean if a field has been set.
func (o *Organisation) HasExternalLinksField() bool {
	if o != nil && !IsNil(o.ExternalLinks) {
		return true
	}

	return false
}

// SetExternalLinks gets a reference to the given []ExternalLink and assigns it to the ExternalLinks field.
func (o *Organisation) SetExternalLinks(v []ExternalLink) {
	o.ExternalLinks = v
}

// GetPaymentTerms returns the PaymentTerms field value if set, zero value otherwise.
func (o *Organisation) GetPaymentTerms() PaymentTerm {
	if o == nil || IsNil(o.PaymentTerms) {
		var ret PaymentTerm
		return ret
	}
	return *o.PaymentTerms
}

// GetPaymentTermsOk returns a tuple with the PaymentTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organisation) GetPaymentTermsOk() (*PaymentTerm, bool) {
	if o == nil || IsNil(o.PaymentTerms) {
		return nil, false
	}
	return o.PaymentTerms, true
}

// HasPaymentTermsField returns a boolean if a field has been set.
func (o *Organisation) HasPaymentTermsField() bool {
	if o != nil && !IsNil(o.PaymentTerms) {
		return true
	}

	return false
}

// SetPaymentTerms gets a reference to the given PaymentTerm and assigns it to the PaymentTerms field.
func (o *Organisation) SetPaymentTerms(v PaymentTerm) {
	o.PaymentTerms = &v
}

func (o Organisation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Organisation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganisationID) {
		toSerialize["OrganisationID"] = o.OrganisationID
	}
	if !IsNil(o.APIKey) {
		toSerialize["APIKey"] = o.APIKey
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.LegalName) {
		toSerialize["LegalName"] = o.LegalName
	}
	if !IsNil(o.PaysTax) {
		toSerialize["PaysTax"] = o.PaysTax
	}
	if !IsNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	if !IsNil(o.OrganisationType) {
		toSerialize["OrganisationType"] = o.OrganisationType
	}
	if !IsNil(o.BaseCurrency) {
		toSerialize["BaseCurrency"] = o.BaseCurrency
	}
	if !IsNil(o.CountryCode) {
		toSerialize["CountryCode"] = o.CountryCode
	}
	if !IsNil(o.IsDemoCompany) {
		toSerialize["IsDemoCompany"] = o.IsDemoCompany
	}
	if !IsNil(o.OrganisationStatus) {
		toSerialize["OrganisationStatus"] = o.OrganisationStatus
	}
	if !IsNil(o.RegistrationNumber) {
		toSerialize["RegistrationNumber"] = o.RegistrationNumber
	}
	if !IsNil(o.EmployerIdentificationNumber) {
		toSerialize["EmployerIdentificationNumber"] = o.EmployerIdentificationNumber
	}
	if !IsNil(o.TaxNumber) {
		toSerialize["TaxNumber"] = o.TaxNumber
	}
	if !IsNil(o.FinancialYearEndDay) {
		toSerialize["FinancialYearEndDay"] = o.FinancialYearEndDay
	}
	if !IsNil(o.FinancialYearEndMonth) {
		toSerialize["FinancialYearEndMonth"] = o.FinancialYearEndMonth
	}
	if !IsNil(o.SalesTaxBasis) {
		toSerialize["SalesTaxBasis"] = o.SalesTaxBasis
	}
	if !IsNil(o.SalesTaxPeriod) {
		toSerialize["SalesTaxPeriod"] = o.SalesTaxPeriod
	}
	if !IsNil(o.DefaultSalesTax) {
		toSerialize["DefaultSalesTax"] = o.DefaultSalesTax
	}
	if !IsNil(o.DefaultPurchasesTax) {
		toSerialize["DefaultPurchasesTax"] = o.DefaultPurchasesTax
	}
	if !IsNil(o.PeriodLockDate) {
		toSerialize["PeriodLockDate"] = o.PeriodLockDate
	}
	if !IsNil(o.EndOfYearLockDate) {
		toSerialize["EndOfYearLockDate"] = o.EndOfYearLockDate
	}
	if !IsNil(o.CreatedDateUTC) {
		toSerialize["CreatedDateUTC"] = o.CreatedDateUTC
	}
	if !IsNil(o.Timezone) {
		toSerialize["Timezone"] = o.Timezone
	}
	if !IsNil(o.OrganisationEntityType) {
		toSerialize["OrganisationEntityType"] = o.OrganisationEntityType
	}
	if !IsNil(o.ShortCode) {
		toSerialize["ShortCode"] = o.ShortCode
	}
	if !IsNil(o.Class) {
		toSerialize["Class"] = o.Class
	}
	if !IsNil(o.Edition) {
		toSerialize["Edition"] = o.Edition
	}
	if !IsNil(o.LineOfBusiness) {
		toSerialize["LineOfBusiness"] = o.LineOfBusiness
	}
	if !IsNil(o.Addresses) {
		toSerialize["Addresses"] = o.Addresses
	}
	if !IsNil(o.Phones) {
		toSerialize["Phones"] = o.Phones
	}
	if !IsNil(o.ExternalLinks) {
		toSerialize["ExternalLinks"] = o.ExternalLinks
	}
	if !IsNil(o.PaymentTerms) {
		toSerialize["PaymentTerms"] = o.PaymentTerms
	}
	return toSerialize, nil
}

type NullableOrganisation struct {
	value *Organisation
	isSet bool
}

func (v NullableOrganisation) Get() *Organisation {
	return v.value
}

func (v *NullableOrganisation) Set(val *Organisation) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisation) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisation(val *Organisation) *NullableOrganisation {
	return &NullableOrganisation{value: val, isSet: true}
}

func (v NullableOrganisation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


