/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.1
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// TimeZone Timezone specifications
type TimeZone string

// List of TimeZone
const (
	AFGHANISTANSTANDARDTIME_TimeZone TimeZone = "AFGHANISTANSTANDARDTIME"
	ALASKANSTANDARDTIME_TimeZone TimeZone = "ALASKANSTANDARDTIME"
	ALEUTIANSTANDARDTIME_TimeZone TimeZone = "ALEUTIANSTANDARDTIME"
	ALTAISTANDARDTIME_TimeZone TimeZone = "ALTAISTANDARDTIME"
	ARABIANSTANDARDTIME_TimeZone TimeZone = "ARABIANSTANDARDTIME"
	ARABICSTANDARDTIME_TimeZone TimeZone = "ARABICSTANDARDTIME"
	ARABSTANDARDTIME_TimeZone TimeZone = "ARABSTANDARDTIME"
	ARGENTINASTANDARDTIME_TimeZone TimeZone = "ARGENTINASTANDARDTIME"
	ASTRAKHANSTANDARDTIME_TimeZone TimeZone = "ASTRAKHANSTANDARDTIME"
	ATLANTICSTANDARDTIME_TimeZone TimeZone = "ATLANTICSTANDARDTIME"
	AUSCENTRALSTANDARDTIME_TimeZone TimeZone = "AUSCENTRALSTANDARDTIME"
	AUSCENTRALWSTANDARDTIME_TimeZone TimeZone = "AUSCENTRALWSTANDARDTIME"
	AUSEASTERNSTANDARDTIME_TimeZone TimeZone = "AUSEASTERNSTANDARDTIME"
	AZERBAIJANSTANDARDTIME_TimeZone TimeZone = "AZERBAIJANSTANDARDTIME"
	AZORESSTANDARDTIME_TimeZone TimeZone = "AZORESSTANDARDTIME"
	BAHIASTANDARDTIME_TimeZone TimeZone = "BAHIASTANDARDTIME"
	BANGLADESHSTANDARDTIME_TimeZone TimeZone = "BANGLADESHSTANDARDTIME"
	BELARUSSTANDARDTIME_TimeZone TimeZone = "BELARUSSTANDARDTIME"
	BOUGAINVILLESTANDARDTIME_TimeZone TimeZone = "BOUGAINVILLESTANDARDTIME"
	CANADACENTRALSTANDARDTIME_TimeZone TimeZone = "CANADACENTRALSTANDARDTIME"
	CAPEVERDESTANDARDTIME_TimeZone TimeZone = "CAPEVERDESTANDARDTIME"
	CAUCASUSSTANDARDTIME_TimeZone TimeZone = "CAUCASUSSTANDARDTIME"
	CENAUSTRALIASTANDARDTIME_TimeZone TimeZone = "CENAUSTRALIASTANDARDTIME"
	CENTRALAMERICASTANDARDTIME_TimeZone TimeZone = "CENTRALAMERICASTANDARDTIME"
	CENTRALASIASTANDARDTIME_TimeZone TimeZone = "CENTRALASIASTANDARDTIME"
	CENTRALBRAZILIANSTANDARDTIME_TimeZone TimeZone = "CENTRALBRAZILIANSTANDARDTIME"
	CENTRALEUROPEANSTANDARDTIME_TimeZone TimeZone = "CENTRALEUROPEANSTANDARDTIME"
	CENTRALEUROPESTANDARDTIME_TimeZone TimeZone = "CENTRALEUROPESTANDARDTIME"
	CENTRALPACIFICSTANDARDTIME_TimeZone TimeZone = "CENTRALPACIFICSTANDARDTIME"
	CENTRALSTANDARDTIME_TimeZone TimeZone = "CENTRALSTANDARDTIME"
	CENTRALSTANDARDTIME_MEXICO_TimeZone TimeZone = "CENTRALSTANDARDTIME(MEXICO)"
	CHATHAMISLANDSSTANDARDTIME_TimeZone TimeZone = "CHATHAMISLANDSSTANDARDTIME"
	CHINASTANDARDTIME_TimeZone TimeZone = "CHINASTANDARDTIME"
	CUBASTANDARDTIME_TimeZone TimeZone = "CUBASTANDARDTIME"
	DATELINESTANDARDTIME_TimeZone TimeZone = "DATELINESTANDARDTIME"
	EAFRICASTANDARDTIME_TimeZone TimeZone = "EAFRICASTANDARDTIME"
	EASTERISLANDSTANDARDTIME_TimeZone TimeZone = "EASTERISLANDSTANDARDTIME"
	EASTERNSTANDARDTIME_TimeZone TimeZone = "EASTERNSTANDARDTIME"
	EASTERNSTANDARDTIME_MEXICO_TimeZone TimeZone = "EASTERNSTANDARDTIME(MEXICO)"
	EAUSTRALIASTANDARDTIME_TimeZone TimeZone = "EAUSTRALIASTANDARDTIME"
	EEUROPESTANDARDTIME_TimeZone TimeZone = "EEUROPESTANDARDTIME"
	EGYPTSTANDARDTIME_TimeZone TimeZone = "EGYPTSTANDARDTIME"
	EKATERINBURGSTANDARDTIME_TimeZone TimeZone = "EKATERINBURGSTANDARDTIME"
	ESOUTHAMERICASTANDARDTIME_TimeZone TimeZone = "ESOUTHAMERICASTANDARDTIME"
	FIJISTANDARDTIME_TimeZone TimeZone = "FIJISTANDARDTIME"
	FLESTANDARDTIME_TimeZone TimeZone = "FLESTANDARDTIME"
	GEORGIANSTANDARDTIME_TimeZone TimeZone = "GEORGIANSTANDARDTIME"
	GMTSTANDARDTIME_TimeZone TimeZone = "GMTSTANDARDTIME"
	GREENLANDSTANDARDTIME_TimeZone TimeZone = "GREENLANDSTANDARDTIME"
	GREENWICHSTANDARDTIME_TimeZone TimeZone = "GREENWICHSTANDARDTIME"
	GTBSTANDARDTIME_TimeZone TimeZone = "GTBSTANDARDTIME"
	HAITISTANDARDTIME_TimeZone TimeZone = "HAITISTANDARDTIME"
	HAWAIIANSTANDARDTIME_TimeZone TimeZone = "HAWAIIANSTANDARDTIME"
	INDIASTANDARDTIME_TimeZone TimeZone = "INDIASTANDARDTIME"
	IRANSTANDARDTIME_TimeZone TimeZone = "IRANSTANDARDTIME"
	ISRAELSTANDARDTIME_TimeZone TimeZone = "ISRAELSTANDARDTIME"
	JORDANSTANDARDTIME_TimeZone TimeZone = "JORDANSTANDARDTIME"
	KALININGRADSTANDARDTIME_TimeZone TimeZone = "KALININGRADSTANDARDTIME"
	KAMCHATKASTANDARDTIME_TimeZone TimeZone = "KAMCHATKASTANDARDTIME"
	KOREASTANDARDTIME_TimeZone TimeZone = "KOREASTANDARDTIME"
	LIBYASTANDARDTIME_TimeZone TimeZone = "LIBYASTANDARDTIME"
	LINEISLANDSSTANDARDTIME_TimeZone TimeZone = "LINEISLANDSSTANDARDTIME"
	LORDHOWESTANDARDTIME_TimeZone TimeZone = "LORDHOWESTANDARDTIME"
	MAGADANSTANDARDTIME_TimeZone TimeZone = "MAGADANSTANDARDTIME"
	MAGALLANESSTANDARDTIME_TimeZone TimeZone = "MAGALLANESSTANDARDTIME"
	MARQUESASSTANDARDTIME_TimeZone TimeZone = "MARQUESASSTANDARDTIME"
	MAURITIUSSTANDARDTIME_TimeZone TimeZone = "MAURITIUSSTANDARDTIME"
	MIDATLANTICSTANDARDTIME_TimeZone TimeZone = "MIDATLANTICSTANDARDTIME"
	MIDDLEEASTSTANDARDTIME_TimeZone TimeZone = "MIDDLEEASTSTANDARDTIME"
	MONTEVIDEOSTANDARDTIME_TimeZone TimeZone = "MONTEVIDEOSTANDARDTIME"
	MOROCCOSTANDARDTIME_TimeZone TimeZone = "MOROCCOSTANDARDTIME"
	MOUNTAINSTANDARDTIME_TimeZone TimeZone = "MOUNTAINSTANDARDTIME"
	MOUNTAINSTANDARDTIME_MEXICO_TimeZone TimeZone = "MOUNTAINSTANDARDTIME(MEXICO)"
	MYANMARSTANDARDTIME_TimeZone TimeZone = "MYANMARSTANDARDTIME"
	NAMIBIASTANDARDTIME_TimeZone TimeZone = "NAMIBIASTANDARDTIME"
	NCENTRALASIASTANDARDTIME_TimeZone TimeZone = "NCENTRALASIASTANDARDTIME"
	NEPALSTANDARDTIME_TimeZone TimeZone = "NEPALSTANDARDTIME"
	NEWFOUNDLANDSTANDARDTIME_TimeZone TimeZone = "NEWFOUNDLANDSTANDARDTIME"
	NEWZEALANDSTANDARDTIME_TimeZone TimeZone = "NEWZEALANDSTANDARDTIME"
	NORFOLKSTANDARDTIME_TimeZone TimeZone = "NORFOLKSTANDARDTIME"
	NORTHASIAEASTSTANDARDTIME_TimeZone TimeZone = "NORTHASIAEASTSTANDARDTIME"
	NORTHASIASTANDARDTIME_TimeZone TimeZone = "NORTHASIASTANDARDTIME"
	NORTHKOREASTANDARDTIME_TimeZone TimeZone = "NORTHKOREASTANDARDTIME"
	OMSKSTANDARDTIME_TimeZone TimeZone = "OMSKSTANDARDTIME"
	PACIFICSASTANDARDTIME_TimeZone TimeZone = "PACIFICSASTANDARDTIME"
	PACIFICSTANDARDTIME_TimeZone TimeZone = "PACIFICSTANDARDTIME"
	PACIFICSTANDARDTIME_MEXICO_TimeZone TimeZone = "PACIFICSTANDARDTIME(MEXICO)"
	PAKISTANSTANDARDTIME_TimeZone TimeZone = "PAKISTANSTANDARDTIME"
	PARAGUAYSTANDARDTIME_TimeZone TimeZone = "PARAGUAYSTANDARDTIME"
	QYZYLORDASTANDARDTIME_TimeZone TimeZone = "QYZYLORDASTANDARDTIME"
	ROMANCESTANDARDTIME_TimeZone TimeZone = "ROMANCESTANDARDTIME"
	RUSSIANSTANDARDTIME_TimeZone TimeZone = "RUSSIANSTANDARDTIME"
	RUSSIATIMEZONE10_TimeZone TimeZone = "RUSSIATIMEZONE10"
	RUSSIATIMEZONE11_TimeZone TimeZone = "RUSSIATIMEZONE11"
	RUSSIATIMEZONE3_TimeZone TimeZone = "RUSSIATIMEZONE3"
	SAEASTERNSTANDARDTIME_TimeZone TimeZone = "SAEASTERNSTANDARDTIME"
	SAINTPIERRESTANDARDTIME_TimeZone TimeZone = "SAINTPIERRESTANDARDTIME"
	SAKHALINSTANDARDTIME_TimeZone TimeZone = "SAKHALINSTANDARDTIME"
	SAMOASTANDARDTIME_TimeZone TimeZone = "SAMOASTANDARDTIME"
	SAOTOMESTANDARDTIME_TimeZone TimeZone = "SAOTOMESTANDARDTIME"
	SAPACIFICSTANDARDTIME_TimeZone TimeZone = "SAPACIFICSTANDARDTIME"
	SARATOVSTANDARDTIME_TimeZone TimeZone = "SARATOVSTANDARDTIME"
	SAWESTERNSTANDARDTIME_TimeZone TimeZone = "SAWESTERNSTANDARDTIME"
	SEASIASTANDARDTIME_TimeZone TimeZone = "SEASIASTANDARDTIME"
	SINGAPORESTANDARDTIME_TimeZone TimeZone = "SINGAPORESTANDARDTIME"
	SOUTHAFRICASTANDARDTIME_TimeZone TimeZone = "SOUTHAFRICASTANDARDTIME"
	SOUTHSUDANSTANDARDTIME_TimeZone TimeZone = "SOUTHSUDANSTANDARDTIME"
	SRILANKASTANDARDTIME_TimeZone TimeZone = "SRILANKASTANDARDTIME"
	SUDANSTANDARDTIME_TimeZone TimeZone = "SUDANSTANDARDTIME"
	SYRIASTANDARDTIME_TimeZone TimeZone = "SYRIASTANDARDTIME"
	TAIPEISTANDARDTIME_TimeZone TimeZone = "TAIPEISTANDARDTIME"
	TASMANIASTANDARDTIME_TimeZone TimeZone = "TASMANIASTANDARDTIME"
	TOCANTINSSTANDARDTIME_TimeZone TimeZone = "TOCANTINSSTANDARDTIME"
	TOKYOSTANDARDTIME_TimeZone TimeZone = "TOKYOSTANDARDTIME"
	TOMSKSTANDARDTIME_TimeZone TimeZone = "TOMSKSTANDARDTIME"
	TONGASTANDARDTIME_TimeZone TimeZone = "TONGASTANDARDTIME"
	TRANSBAIKALSTANDARDTIME_TimeZone TimeZone = "TRANSBAIKALSTANDARDTIME"
	TURKEYSTANDARDTIME_TimeZone TimeZone = "TURKEYSTANDARDTIME"
	TURKSANDCAICOSSTANDARDTIME_TimeZone TimeZone = "TURKSANDCAICOSSTANDARDTIME"
	ULAANBAATARSTANDARDTIME_TimeZone TimeZone = "ULAANBAATARSTANDARDTIME"
	USEASTERNSTANDARDTIME_TimeZone TimeZone = "USEASTERNSTANDARDTIME"
	USMOUNTAINSTANDARDTIME_TimeZone TimeZone = "USMOUNTAINSTANDARDTIME"
	UTC_TimeZone TimeZone = "UTC"
	UTC12_TimeZone TimeZone = "UTC+12"
	UTC13_TimeZone TimeZone = "UTC+13"
	UTC02_TimeZone TimeZone = "UTC02"
	UTC08_TimeZone TimeZone = "UTC08"
	UTC09_TimeZone TimeZone = "UTC09"
	UTC11_TimeZone TimeZone = "UTC11"
	VENEZUELASTANDARDTIME_TimeZone TimeZone = "VENEZUELASTANDARDTIME"
	VLADIVOSTOKSTANDARDTIME_TimeZone TimeZone = "VLADIVOSTOKSTANDARDTIME"
	VOLGOGRADSTANDARDTIME_TimeZone TimeZone = "VOLGOGRADSTANDARDTIME"
	WAUSTRALIASTANDARDTIME_TimeZone TimeZone = "WAUSTRALIASTANDARDTIME"
	WCENTRALAFRICASTANDARDTIME_TimeZone TimeZone = "WCENTRALAFRICASTANDARDTIME"
	WESTASIASTANDARDTIME_TimeZone TimeZone = "WESTASIASTANDARDTIME"
	WESTBANKSTANDARDTIME_TimeZone TimeZone = "WESTBANKSTANDARDTIME"
	WESTPACIFICSTANDARDTIME_TimeZone TimeZone = "WESTPACIFICSTANDARDTIME"
	WEUROPESTANDARDTIME_TimeZone TimeZone = "WEUROPESTANDARDTIME"
	WMONGOLIASTANDARDTIME_TimeZone TimeZone = "WMONGOLIASTANDARDTIME"
	YAKUTSKSTANDARDTIME_TimeZone TimeZone = "YAKUTSKSTANDARDTIME"
	YUKONSTANDARDTIME_TimeZone TimeZone = "YUKONSTANDARDTIME"
)

// All allowed values of TimeZone enum
var AllowedTimeZoneEnumValues = []TimeZone{
	"AFGHANISTANSTANDARDTIME",
	"ALASKANSTANDARDTIME",
	"ALEUTIANSTANDARDTIME",
	"ALTAISTANDARDTIME",
	"ARABIANSTANDARDTIME",
	"ARABICSTANDARDTIME",
	"ARABSTANDARDTIME",
	"ARGENTINASTANDARDTIME",
	"ASTRAKHANSTANDARDTIME",
	"ATLANTICSTANDARDTIME",
	"AUSCENTRALSTANDARDTIME",
	"AUSCENTRALWSTANDARDTIME",
	"AUSEASTERNSTANDARDTIME",
	"AZERBAIJANSTANDARDTIME",
	"AZORESSTANDARDTIME",
	"BAHIASTANDARDTIME",
	"BANGLADESHSTANDARDTIME",
	"BELARUSSTANDARDTIME",
	"BOUGAINVILLESTANDARDTIME",
	"CANADACENTRALSTANDARDTIME",
	"CAPEVERDESTANDARDTIME",
	"CAUCASUSSTANDARDTIME",
	"CENAUSTRALIASTANDARDTIME",
	"CENTRALAMERICASTANDARDTIME",
	"CENTRALASIASTANDARDTIME",
	"CENTRALBRAZILIANSTANDARDTIME",
	"CENTRALEUROPEANSTANDARDTIME",
	"CENTRALEUROPESTANDARDTIME",
	"CENTRALPACIFICSTANDARDTIME",
	"CENTRALSTANDARDTIME",
	"CENTRALSTANDARDTIME(MEXICO)",
	"CHATHAMISLANDSSTANDARDTIME",
	"CHINASTANDARDTIME",
	"CUBASTANDARDTIME",
	"DATELINESTANDARDTIME",
	"EAFRICASTANDARDTIME",
	"EASTERISLANDSTANDARDTIME",
	"EASTERNSTANDARDTIME",
	"EASTERNSTANDARDTIME(MEXICO)",
	"EAUSTRALIASTANDARDTIME",
	"EEUROPESTANDARDTIME",
	"EGYPTSTANDARDTIME",
	"EKATERINBURGSTANDARDTIME",
	"ESOUTHAMERICASTANDARDTIME",
	"FIJISTANDARDTIME",
	"FLESTANDARDTIME",
	"GEORGIANSTANDARDTIME",
	"GMTSTANDARDTIME",
	"GREENLANDSTANDARDTIME",
	"GREENWICHSTANDARDTIME",
	"GTBSTANDARDTIME",
	"HAITISTANDARDTIME",
	"HAWAIIANSTANDARDTIME",
	"INDIASTANDARDTIME",
	"IRANSTANDARDTIME",
	"ISRAELSTANDARDTIME",
	"JORDANSTANDARDTIME",
	"KALININGRADSTANDARDTIME",
	"KAMCHATKASTANDARDTIME",
	"KOREASTANDARDTIME",
	"LIBYASTANDARDTIME",
	"LINEISLANDSSTANDARDTIME",
	"LORDHOWESTANDARDTIME",
	"MAGADANSTANDARDTIME",
	"MAGALLANESSTANDARDTIME",
	"MARQUESASSTANDARDTIME",
	"MAURITIUSSTANDARDTIME",
	"MIDATLANTICSTANDARDTIME",
	"MIDDLEEASTSTANDARDTIME",
	"MONTEVIDEOSTANDARDTIME",
	"MOROCCOSTANDARDTIME",
	"MOUNTAINSTANDARDTIME",
	"MOUNTAINSTANDARDTIME(MEXICO)",
	"MYANMARSTANDARDTIME",
	"NAMIBIASTANDARDTIME",
	"NCENTRALASIASTANDARDTIME",
	"NEPALSTANDARDTIME",
	"NEWFOUNDLANDSTANDARDTIME",
	"NEWZEALANDSTANDARDTIME",
	"NORFOLKSTANDARDTIME",
	"NORTHASIAEASTSTANDARDTIME",
	"NORTHASIASTANDARDTIME",
	"NORTHKOREASTANDARDTIME",
	"OMSKSTANDARDTIME",
	"PACIFICSASTANDARDTIME",
	"PACIFICSTANDARDTIME",
	"PACIFICSTANDARDTIME(MEXICO)",
	"PAKISTANSTANDARDTIME",
	"PARAGUAYSTANDARDTIME",
	"QYZYLORDASTANDARDTIME",
	"ROMANCESTANDARDTIME",
	"RUSSIANSTANDARDTIME",
	"RUSSIATIMEZONE10",
	"RUSSIATIMEZONE11",
	"RUSSIATIMEZONE3",
	"SAEASTERNSTANDARDTIME",
	"SAINTPIERRESTANDARDTIME",
	"SAKHALINSTANDARDTIME",
	"SAMOASTANDARDTIME",
	"SAOTOMESTANDARDTIME",
	"SAPACIFICSTANDARDTIME",
	"SARATOVSTANDARDTIME",
	"SAWESTERNSTANDARDTIME",
	"SEASIASTANDARDTIME",
	"SINGAPORESTANDARDTIME",
	"SOUTHAFRICASTANDARDTIME",
	"SOUTHSUDANSTANDARDTIME",
	"SRILANKASTANDARDTIME",
	"SUDANSTANDARDTIME",
	"SYRIASTANDARDTIME",
	"TAIPEISTANDARDTIME",
	"TASMANIASTANDARDTIME",
	"TOCANTINSSTANDARDTIME",
	"TOKYOSTANDARDTIME",
	"TOMSKSTANDARDTIME",
	"TONGASTANDARDTIME",
	"TRANSBAIKALSTANDARDTIME",
	"TURKEYSTANDARDTIME",
	"TURKSANDCAICOSSTANDARDTIME",
	"ULAANBAATARSTANDARDTIME",
	"USEASTERNSTANDARDTIME",
	"USMOUNTAINSTANDARDTIME",
	"UTC",
	"UTC+12",
	"UTC+13",
	"UTC02",
	"UTC08",
	"UTC09",
	"UTC11",
	"VENEZUELASTANDARDTIME",
	"VLADIVOSTOKSTANDARDTIME",
	"VOLGOGRADSTANDARDTIME",
	"WAUSTRALIASTANDARDTIME",
	"WCENTRALAFRICASTANDARDTIME",
	"WESTASIASTANDARDTIME",
	"WESTBANKSTANDARDTIME",
	"WESTPACIFICSTANDARDTIME",
	"WEUROPESTANDARDTIME",
	"WMONGOLIASTANDARDTIME",
	"YAKUTSKSTANDARDTIME",
	"YUKONSTANDARDTIME",
}

func (v *TimeZone) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TimeZone(value)
	for _, existing := range AllowedTimeZoneEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TimeZone", value)
}

// NewTimeZoneFromValue returns a pointer to a valid TimeZone
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTimeZoneFromValue(v string) (*TimeZone, error) {
	ev := TimeZone(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TimeZone: valid values are %v", v, AllowedTimeZoneEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TimeZone) IsValid() bool {
	for _, existing := range AllowedTimeZoneEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TimeZone value
func (v TimeZone) Ptr() *TimeZone {
	return &v
}

type NullableTimeZone struct {
	value *TimeZone
	isSet bool
}

func (v NullableTimeZone) Get() *TimeZone {
	return v.value
}

func (v *NullableTimeZone) Set(val *TimeZone) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeZone) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeZone(val *TimeZone) *NullableTimeZone {
	return &NullableTimeZone{value: val, isSet: true}
}

func (v NullableTimeZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

